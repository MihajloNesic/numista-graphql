type Coin {
    id: ID!
    title: String!
    issuer: Issuer!
    referenceNumber: String!
    year_min: Int
    year_max: Int
    demonetized: Boolean
    faceValue: Float
    composition: String
    weight: Float
    diameter: Float
    shape: String
    obverseLettering: String
    reverseLettering: String
    obverseImage: String
    reverseImage: String
    numistaId: Int @auth(denyRoles: ["user"])
    mintage: [Mintage]
}

type CoinsPage {
    data: [Coin]!
    hasData: Boolean
    totalPages: Int!
    totalElements: Int!
    currentPage: Int!
    currentSize: Int!
    hasNext: Boolean!
    nextPage: Int
    hasPrevious: Boolean!
    previousPage: Int
    last: Boolean!
    first: Boolean!
}

extend type Query {
    """
        Returns all coins in the catalogue
    """
    allCoins: [Coin] @auth(allowRoles: ["admin"])

    """
        Returns coins by issuer. Composition tag is optional. Pagination is present
    """
    coins(issuerId: ID!, compositionTag: CompositionTag, page: Int = 0, size: Int = 10): CoinsPage

    """
        Returns coin by ID
    """
    coin(id: ID!): Coin

    """
        Searches a coin by title
    """
    searchCoins(title: String!, page: Int = 0, size: Int = 10): CoinsPage
}